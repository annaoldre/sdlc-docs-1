import{_ as s,o as n,c as a,d as e}from"./app-2b088454.js";const t={},i=e(`<h1 id="jest-library" tabindex="-1"><a class="header-anchor" href="#jest-library" aria-hidden="true">#</a> Jest Library</h1><p>The AudioEye Testing SDK Jest Library gives you the ability to write Jest tests to test components of your project.</p><h2 id="pre-requisites" tabindex="-1"><a class="header-anchor" href="#pre-requisites" aria-hidden="true">#</a> Pre-requisites</h2><p>xxx</p><h2 id="installing-the-library" tabindex="-1"><a class="header-anchor" href="#installing-the-library" aria-hidden="true">#</a> Installing the library</h2><p>xxx</p><h2 id="available-tests" tabindex="-1"><a class="header-anchor" href="#available-tests" aria-hidden="true">#</a> Available Tests</h2><h3 id="tofindaccessibilityissues" tabindex="-1"><a class="header-anchor" href="#tofindaccessibilityissues" aria-hidden="true">#</a> toFindAccessibilityIssues</h3><p>Used to identify if accessibility issues are found.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;should not find accessibility issues&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>htmlWithAccessibleContent<span class="token punctuation">)</span><span class="token punctuation">.</span>not<span class="token punctuation">.</span><span class="token function">toFindAccessibilityIssues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="toonlyhavetheseaccessibilityissues" tabindex="-1"><a class="header-anchor" href="#toonlyhavetheseaccessibilityissues" aria-hidden="true">#</a> toOnlyHaveTheseAccessibilityIssues</h3><p>Use to define which accessibility issues are expected. Pass a comma separated list of expected test names.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;should find accessibility issues&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>htmlWithImgTextAltIssue<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toOnlyHaveTheseAccessibilityIssues</span><span class="token punctuation">(</span><span class="token string">&#39;imgTextAlt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="tohaveaccessibilityissuecount" tabindex="-1"><a class="header-anchor" href="#tohaveaccessibilityissuecount" aria-hidden="true">#</a> toHaveAccessibilityIssueCount</h3><p>Verifying that a specific number of Accessibility Issues is returned.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">it</span><span class="token punctuation">(</span><span class="token string">&#39;passes when expected issue count is 0 and no issues are found&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">await</span> <span class="token function">expect</span><span class="token punctuation">(</span>rawElementWithNoAccessibilityIssues<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveAccessibilityIssueCount</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,16),c=[i];function p(o,l){return n(),a("div",null,c)}const r=s(t,[["render",p],["__file","jest.html.vue"]]);export{r as default};
